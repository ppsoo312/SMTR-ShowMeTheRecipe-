<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- <annotation-driven>
		<message-converters>
			<beans:bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html; charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>

			<beans:bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>application/text; charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven> -->
	
	<!--  -->
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven /> -->
	<mvc:annotation-driven />
	
	<!-- 트랜젝션 관리 -->
	<!-- <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	트랜잭션을 관리할 메소드 및 속성 지정
	<tx:advice id="transactionAdvice" transaction-manager="transcationManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.study.transaction.service.impl.*Imple.*(..))" id="requiredTx"/>
		정의된 pointcut과 transactionAdvice를 연결
   		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="requiredTx" />
	</aop:config>

	<tx:annotation-driven /> -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	<context:component-scan base-package="com.board.controller" />
	
	<!-- <beans:bean class="com.board.controller.MemberController">
		<beans:constructor-arg ref="memberService" />
	</beans:bean> -->
	
	<beans:bean id="memberService" class="com.board.member.MemberServiceImpl"/>
	<beans:bean id="memberDao" class="com.board.member.MemberDAOImpl"/>
	<beans:bean id="boardService" class="com.board.board.BoardServiceImpl"/>
	<beans:bean id="boardDao" class="com.board.board.BoardDAOImpl"/>
	
	
	

	
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*" />

            <beans:bean class="com.board.controller.LoginInterceptor">
            </beans:bean>
        </mvc:interceptor>
    </mvc:interceptors> 
	
	
</beans:beans>
